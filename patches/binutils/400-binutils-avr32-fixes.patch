diff -Naurp bfd/elf32-avr32.c bfd/elf32-avr32.c
--- bfd/elf32-avr32.c	2013-02-15 12:55:26.000000000 +0530
+++ bfd/elf32-avr32.c	2013-02-15 12:57:16.000000000 +0530
@@ -3866,6 +3866,7 @@ avr32_elf_grok_psinfo(bfd *abfd, Elf_Int
 
 #define ELF_ARCH			bfd_arch_avr32
 #define ELF_MACHINE_CODE		EM_AVR32
+#define ELF_MACHINE_ALT1	        EM_AVR32_OLD
 #define ELF_TARGET_ID			AVR32_ELF_DATA
 #define ELF_MAXPAGESIZE			1024
 
diff -Naurp gas/as.h gas/as.h
--- gas/as.h	2012-06-07 18:17:23.000000000 +0530
+++ gas/as.h	2013-02-15 12:57:16.000000000 +0530
@@ -89,6 +89,7 @@
 #endif
 #define gas_assert(P) \
   ((void) ((P) ? 0 : (as_assert (__FILE__, __LINE__, __PRETTY_FUNCTION__), 0)))
+#define assert(P)   gas_assert(P)
 #undef abort
 #define abort()		as_abort (__FILE__, __LINE__, __PRETTY_FUNCTION__)
 
diff -Naurp gas/atof-generic.c gas/atof-generic.c
--- gas/atof-generic.c	2009-09-02 12:54:19.000000000 +0530
+++ gas/atof-generic.c	2013-02-15 12:57:16.000000000 +0530
@@ -121,6 +121,21 @@ atof_generic (/* return pointer to just 
 
   switch (first_digit[0])
     {
+    case 's':
+    case 'S':
+    case 'q':
+    case 'Q':
+      if (!strncasecmp ("nan", first_digit+1, 3))
+	{
+	  address_of_generic_floating_point_number->sign = 0;
+	  address_of_generic_floating_point_number->exponent = 0;
+	  address_of_generic_floating_point_number->leader =
+	    address_of_generic_floating_point_number->low;
+	  *address_of_string_pointer = first_digit + 4;
+	  return 0;
+	}
+      break;
+
     case 'n':
     case 'N':
       if (!strncasecmp ("nan", first_digit, 3))
diff -Naurp gas/config/atof-vax.c gas/config/atof-vax.c
--- gas/config/atof-vax.c	2007-10-17 22:15:54.000000000 +0530
+++ gas/config/atof-vax.c	2013-02-15 12:57:16.000000000 +0530
@@ -268,9 +268,27 @@ flonum_gen2vax (int format_letter,	/* On
 	  int exponent_skippage;
 	  LITTLENUM_TYPE word1;
 
-	  /* JF: Deal with new Nan, +Inf and -Inf codes.  */
+    	  /* JF: Deal with new +/-(q/Q/s/S)Nan, +Inf and -Inf codes.  */
 	  if (f->sign != '-' && f->sign != '+')
 	    {
+          if (f->sign == 0)
+            {
+              /* All NaNs are 0.  */
+              memset (words, 0x00, sizeof (LITTLENUM_TYPE) * precision);
+            }
+          else if (f->sign == 'P')
+            {
+              /* Positive Infinity.  */
+              memset (words, 0xff, sizeof (LITTLENUM_TYPE) * precision);
+              words[0] &= 0x7fff;
+            }
+          else if (f->sign == 'N')
+            {
+              /* Negative Infinity.  */
+              memset (words, 0x00, sizeof (LITTLENUM_TYPE) * precision);
+              words[0] = 0x0080;
+            }
+          else
 	      make_invalid_floating_point_number (words);
 	      return return_value;
 	    }
diff -Naurp include/elf/common.h include/elf/common.h
--- include/elf/common.h	2013-02-15 12:56:47.000000000 +0530
+++ include/elf/common.h	2013-02-15 12:57:16.000000000 +0530
@@ -373,7 +373,7 @@
 #define EM_CYGNUS_V850		0x9080
 
 /* AVR32 magic number, picked by IAR Systems. */
-#define EM_AVR32		0x18ad
+#define EM_AVR32_OLD		0x18ad
 
 /* old S/390 backend magic number. Written in the absence of an ABI.  */
 #define EM_S390_OLD		0xa390
